name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  integration:
    name: Integration Tests with Docker Compose
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Docker image
        run: docker build -t my-app .

      - name: Start Docker Compose services
        run: docker compose up -d

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..10}; do
            if docker exec postgres_db pg_isready -U library_management_989j_user; then
              echo "PostgreSQL is ready"
              exit 0
            fi
            sleep 5
          done
          echo "PostgreSQL did not become ready in time."
          exit 1

      - name: Run integration tests
        run: npm run test:integration

      - name: Tear down Docker Compose services
        run: docker compose down
